{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "demoadmin",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "demoPassword1!",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "sapSystemId": {
      "type": "string",
      "maxLength": 3,
      "minLength": 3,
      "defaultValue": "S03",
      "metadata": {
        "description": "SAP System ID."
      }
    },
    "osType": {
      "type": "string",
      "allowedValues": [
        "Windows Server 2012 Datacenter",
        "Windows Server 2012 R2 Datacenter",
        "Windows Server 2016 Datacenter",
        "SLES 12",
        "SLES 12 BYOS",
        "RHEL 7.2",
        "Oracle Linux 7.2"
      ],
      "defaultValue": "SLES 12 BYOS",
      "metadata": {
        "description": "The type of the operating system you want to deploy."
      }
    },
    "dbtype": {
      "type": "string",
      "allowedValues": [
        "SQL",
        "HANA"
      ],
      "defaultValue": "HANA",
      "metadata": {
        "description": "The type of the database"
      }
    },
    "sapSystemSize": {
      "type": "string",
      "allowedValues": [
        "Demo",
        "Small < 30.000 SAPS",
        "Medium < 70.000 SAPS",
        "Large < 180.000 SAPS",
        "X-Large < 250.000 SAPS"
      ],
      "defaultValue": "Demo",
      "metadata": {
        "description": "The size of the SAP System you want to deploy."
      }
    },
    "systemAvailability": {
      "type": "string",
      "allowedValues": [
        "HA",
        "Not HA"
      ],
      "defaultValue": "HA",
      "metadata": {
        "description": "Determines whether this is a high available deployment or not. A HA deployment contains multiple instances of single point of failures."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/wmhussain/sap-hana-labs/master/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "nicName": "s03-hana-nic",
    "addressPrefix": "172.17.0.0/20",
    "subnet0Name": "subnet-0",
    "subnet0Prefix": "172.17.0.0/24",
    "subnet1Name": "subnet-1",
    "subnet1Prefix": "172.17.1.0/24",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet0Name'))]",
    "subnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet1Name'))]",
    "vmName": "s03-hana-0",
    "virtualNetworkName": "s03-vnet",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "publicIPAddressName": "s03-hana-0-ip",
    "dnsNameForPublicIP": "[concat(variables('vmName'),uniqueString(resourceGroup().id))]",
    "fileToBeCopied": "FileToBeCopied.txt",
    "nestedTemplateFolder": "nested",
    "nestedTemplateFileName": "sap-hana.json",
    "nestedTemplateParametersFileName": "sap-hana.parameters.json",
    "scriptFolder": "scripts/",
    "scriptFileName": "jumpvm-config.ps1",
    "vmExtensionName": "vmExtension",
    "scriptPath": "[concat(parameters('_artifactsLocation'), variables('scriptFolder'), variables('scriptFileName'), parameters('_artifactsLocationSasToken'))]"
  },
  "resources": [
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet0Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet0Prefix')]"
            }

          },
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('publicIPAddressName')]",
        "[variables('virtualNetworkName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('nicName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D1_v2"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName'),'/', variables('vmExtensionName'))]",
          "apiVersion": "2017-05-10",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[variables('vmName')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[variables('scriptPath')]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ',  variables('scriptFileName'), ' >> script.log 2>&1' )]"
            }
          }
        }
      ]
    },
    {
      "name": "sap-hana-nested",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[variables('vmName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('nestedTemplateFolder'), '/', variables('nestedTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminusername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sapSystemId": {
            "value": "[parameters('sapSystemId')]"
          },
          "osType": {
            "value": "[parameters('osType')]"
          },
          "dbtype": {
            "value": "[parameters('dbtype')]"
          },
          "sapSystemSize": {
            "value": "[parameters('sapSystemSize')]"
          },
          "systemAvailability": {
            "value": "[parameters('systemAvailability')]"
          },
          "subnetId": {
            "value": "[variables('subnetID')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"

          }

        }
      }
    }
  ],
  "outputs": {
    "Jump VM IP": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName'), '2017-10-01').dnsSettings.fqdn]"
    },
    	"Username": {
      "type": "string",
      "Value": "[parameters('adminUsername')]"
      },
    "Password": {
      "type": "string",
      "Value": "[parameters('adminPassword')]"
      }
  }
}
